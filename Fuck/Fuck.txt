from typing import cast
import requests
from requests.auth import HTTPDigestAuth
import json

cityList = ["Berlin", "Amsterdam", "Barcelona", "Dubay", "London", "Paris", "Rome", "Tuscany"]
catList = ["attraction", "restaurant", "poi"]

# user input capitalized and trailing whitespace removed
print("Valid cities: \nBerlin\tAmsterdam\nDubay\tLondon\nParis\tRome\nTuscany\n")
city = input("Enter city: ").capitalize().rstrip()
# check if the city is valid input
if city in cityList:
    pass
else:
    print("Invalid city")
    exit()

# user input in lowercase and trailing whitespace removed
print("Valid categories: \nattraction\nrestaurant\npoi (point of interest)\n")
cat = input("Enter category: ").lower().rstrip()
# check if the city is valid input
if cat in catList:
    pass
else:
    print("Invalid categories")
    exit()

url = "http://tour-pedia.org/api/getPlaces?category="+cat+"&location="+city


# It is a good practice not to hardcode the credentials. So ask the user to enter credentials at runtime
myResponse = requests.get(url,verify=True)
#print (myResponse.status_code)

# For successful API call, response code will be 200 (OK)
if(myResponse.ok):

    # Loading the response data into a dict variable
    # json.loads takes in only binary or string variables so using content to fetch binary content
    # Loads (Load String) takes a Json file and converts into python data structure (dict or list, depending on JSON)
    jData = json.loads(myResponse.content)

    # Iterate directly through the list of dictionaries
    for place in jData:
        # Iterate through the key-value pairs in each dictionary
        for key, value in place.items():
            print(key, ":", value)
        print("\n")
else:
  # If response code is not ok (200), print the resulting http error code with description
    myResponse.raise_for_status()